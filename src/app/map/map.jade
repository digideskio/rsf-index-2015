.map.panel.panel-default(ng-if='settings')
  leaflet.map__workspace(center='settings.center', defaults="settings.defaults" id='{{mapId}}')

  .map__header.hidden
    .row.text-center
      .col-xs-4
        span.map__header__legend
          span(ng-style="{ color: data.brewer(0)  }") ◼
          span(ng-style="{ color: data.brewer(20) }") ◼
          span(ng-style="{ color: data.brewer(40) }") ◼
          span(ng-style="{ color: data.brewer(60) }") ◼
          span(ng-style="{ color: data.brewer(80) }") ◼
          span.map__header__legend__min -
          span.map__header__legend__max +
          span.map__header__legend__label {{ 'score' | translate }}

      .col-xs-4
        {{ 'share-embed' | translate }}
      .col-xs-4
        {{ 'select_year' | translate }}&nbsp;
        span.dropdown(dropdown)
          a.dropdown-toggle(dropdown-toggle)
            {{ selectedYear }} <span class="caret"></span>
          ul.dropdown-menu.dropdown-menu-right
            li.text-center(ng-repeat="year in availableYears", ng-class="{ active: year === selectedYear }")
              a(ng-click="selectYear(year)")
                {{ year }}

  .map__ranking
    a.map__ranking__share {{ 'share-embed' | translate }}
    h3.map__ranking__title
      {{ 'ranking' | translate }}&nbsp;
      span.dropdown(dropdown)
        a.dropdown-toggle(dropdown-toggle)
          {{ selectedYear }} <span class="caret"></span>
        ul.dropdown-menu.dropdown-menu-left
          li.text-center(ng-repeat="year in availableYears", ng-class="{ active: year === selectedYear }")
            a(ng-click="selectYear(year)")
              {{ year }}

    p.map__ranking__desc {{ 'map_desc' | translate }}
    ul.list-unstyled.map__ranking__overflow
      li.map__ranking__overflow__item(ng-repeat="country in data.ranking | orderBy:countryRank ", ng-class="{ 'map__ranking__overflow__item--highlight': highlightedCountry === country.country_code}" data-country="{{  country.country_code }}", ng-click="highlightCountry(country.country_code)")
        em.map__ranking__overflow__item__score(title="{{ 'country_score' | translate }}")
          {{ country[ 'score_' + selectedYear ] }}
        span.map__ranking__overflow__item__rank.label(ng-style="{ background: countryColor(country), color: countryContrast(country) }")
          {{ country[ 'ranking_' + selectedYear ] }}
        | &nbsp;{{ data.country(country).name() | titlecase }}<br />




