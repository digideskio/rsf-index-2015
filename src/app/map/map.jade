.map(ng-if='settings', ng-class="{ 'map--country-selected': country }")
  leaflet.map__workspace(center='settings.center', tiles="settings.tiles", maxbounds="settings.maxbounds", defaults="settings.defaults" id='{{mapId}}')

  .map__brand.panel.panel-default(ng-show=" 'embed' | isState ")
    a(href="http://rsf.org", target="_blank")
      img(ng-src='http://rsf.org/squelettes/img/{{useLanguage()}}/logo-{{useLanguage()}}.png', height='25')
  .map__header
    span.map__header__legend.panel.panel-default
      span(ng-style="{ color: data.brewer(0)  }") ◼
      span(ng-style="{ color: data.brewer(26) }") ◼
      span(ng-style="{ color: data.brewer(36) }") ◼
      span(ng-style="{ color: data.brewer(60) }") ◼
      span(ng-style="{ color: data.brewer(80) }") ◼
      span.map__header__legend__min -
      span.map__header__legend__max +
      span.map__header__legend__label {{ 'score' | translate }}

  .map__ranking(ng-if='!country')
    perfect-scrollbar.scroller
      a(ng-click="openShareModal()").map__ranking__share {{ 'share-embed' | translate }}
      h3.map__ranking__title
        | {{ 'ranking' | translate }}&nbsp;
        span.dropdown(dropdown)
          a.dropdown-toggle(dropdown-toggle)
            | {{ selectedYear }} <span class="caret"></span>
          ul.dropdown-menu.dropdown-menu-left
            li(ng-repeat="year in availableYears", ng-class="{ active: year === selectedYear }")
              a(ng-click="selectYear(year)")
                | {{ year }}

      p.map__ranking__desc {{ 'map_desc' | translate }}
      ul.list-unstyled.map__ranking__overflow
        li.map__ranking__overflow__item(ng-repeat="country in data.ranking | filter:withRank | orderBy:countryRank ", ng-class="{ 'map__ranking__overflow__item--highlight': highlightedCountry === country.country_code}" data-country="{{  country.country_code }}", ng-click="highlightCountry(country.country_code)")
          em.map__ranking__overflow__item__score(title="{{ 'country_score' | translate }}")
            | {{ country[ 'score_' + selectedYear ] | decimal }}
          span.map__ranking__overflow__item__rank.label(ng-style="{ background: countryColor(country), color: countryContrast(country) }")
            | \#{{ country[ 'ranking_' + selectedYear ] }}
          | &nbsp;{{ data.country(country).name() }}<br />
